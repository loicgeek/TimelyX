import { DateTime } from 'ts-luxon';
import { TEvent } from './types/t_event';
import { THeaderOption } from './types/t_header_option';
import { TyxWeekOption } from './types/tyx_week_option';
type TimelyXView = "month" | "week" | "day";
export declare class TimelyX {
    protected instance?: HTMLElement;
    timezone: string;
    private selectedDate?;
    private startDate;
    private endDate;
    private language;
    private daysOfWeek;
    private events;
    private eventInstances;
    private view;
    private tHeaderOption;
    private tyxWeekOption;
    private handleEvents;
    isMobile: boolean;
    onDayClicked?: (date: DateTime, events: TEvent[]) => void;
    onTEventClicked?: (event: TEvent) => void;
    onBordersChanged?: (start: DateTime, end: DateTime) => void;
    constructor({ timezone, selectedDate, language, view, // Default view,
    tHeaderOption, tyxWeekOption, handleEvents }?: {
        timezone?: string | undefined;
        selectedDate?: string | undefined;
        language?: string | undefined;
        view?: string | undefined;
        tHeaderOption?: THeaderOption | undefined;
        tyxWeekOption?: TyxWeekOption | undefined;
        handleEvents?: boolean | undefined;
    });
    private adjustGridClass;
    mount(selectorString: string): void;
    changeViewType(view: TimelyXView): void;
    previous(): void;
    next(): void;
    protected _changeMonth(delta: number): void;
    gotoDate(date: DateTime, delta?: number): void;
    private _render;
    private _createHeader;
    private _renderMonthView;
    private _renderEventLists;
    private _removeViewClass;
    private _renderWeekView;
    private _renderDayHeaders;
    private _renderDayView;
    private _createDateCell;
    private _getDayHeaders;
    private _getDatesForMonth;
    private _getDatesForWeek;
    private _handleDateClick;
    private _handleTEventClick;
    private _populateEventDetails;
    private _updateEventInstances;
    addEvent(event: TEvent): void;
    private addEventInstance;
    addAllEvents(events: TEvent[]): void;
}
export {};
